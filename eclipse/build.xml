<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--
  
  	Copyright (c) 2012 - 2020 Hércules S. S. José

    Este arquivo é parte do programa Orçamento Doméstico.
    

    Orçamento Doméstico é um software livre; você pode redistribui-lo e/ou 

    modificá-lo dentro dos termos da Licença Pública Geral Menor GNU como 

    publicada pela Fundação do Software Livre (FSF); na versão 2.1 da 

    Licença.
    

    Este programa é distribuído na esperança que possa ser útil, 

    mas SEM NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÂO a 
    
    qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública 
    
    Geral Menor GNU em português para maiores detalhes.
    

    Você deve ter recebido uma cópia da Licença Pública Geral Menor GNU sob o 

    nome de "LICENSE.TXT" junto com este programa, se não, acesse o site do
    
    projeto no endereco https://github.com/herculeshssj/orcamento ou escreva 
    
    para a Fundação do Software Livre(FSF) Inc., 51 Franklin St, Fifth Floor, 
    
    Boston, MA  02110-1301, USA.
    

    Para mais informações sobre o programa Orçamento Doméstico e seu autor entre  

    em contato pelo e-mail herculeshssj@outlook.com, ou ainda escreva para 

    Hércules S. S. José, Av. Ministro Lafaeyte de Andrade, 1683 - Bl. 3 Apt 404, 

    Marco II - Nova Iguaçu, RJ, Brasil.

  -->

<!DOCTYPE project>
<project name="Orçamento Doméstico" default="deploy">
	
	<!-- Carrega o arquivo de propriedades com os valores das variáveis -->
	<property file="build.properties"/>
	
	<!-- Define as variáveis com os caminhos do código fonte -->
	<property name="src.dir" value="src"/>
	<property name="test.dir" value="test"/>
	<property name="docs.dir" value="docs"/>
	<property name="web.dir" value="WebContent"/>
	<property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
	<property name="target" value="1.8"/>
	<property name="source" value="1.8"/>
	
	<!-- Informações sobre copyright-->
	<target name="info">
		<echo>Geração do build do projeto Orçamento Doméstico</echo>
		<echo>Todos os direitos reservados a ${copyright}.</echo>
		<echo>${website}</echo>
	</target>

	<!-- Compilação dos arquivos fonte -->
	<target name="compile" depends="info">
		<echo>Compilando os arquivos fonte do projeto...</echo>
				
		<path id="master-classpath">
			<!-- Definição da pasta com as libs do projeto -->
		   	<fileset dir="${web.dir}/WEB-INF/lib">
		    	<include name="*.jar"/>
		   	</fileset>
			
			<!-- Definição da pasta com as libs do JUnit -->
		   	<fileset dir="${test.dir}/lib">
		    	<include name="*.jar"/>
		   	</fileset>
			
			<!-- Definição da pasta de instalação do Tomcat -->
			<fileset dir="${tomcat_install}/lib">
		    	<include name="*.jar"/>
		   	</fileset>
			
		   	<pathelement path="${build.dir}"/>
		</path>
		
		<!-- Compila os arquivos .java do projeto -->
		<mkdir dir="${build.dir}"/>
	   	<javac destdir="${build.dir}" source="${source}" target="${target}" debug="true" deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
	    	<src path="${src.dir}"/>
	   		<src path="${test.dir}"/>
	    	<classpath refid="master-classpath"/>
	   	</javac>
		
		<!-- Copia os arquivos de configuração -->
		<copy includeemptydirs="false" todir="${build.dir}">
            <fileset dir="src">
            	<include name="*.xml"/>
            	<include name="*.properties"/>
            </fileset>
			<fileset dir="test">
            	<include name="*.xml"/>
            	<include name="*.properties"/>
            </fileset>
        </copy>
	</target>
	
	<target name="update_db_test" depends="compile">
		<echo>Atualizando a base de dados de teste...</echo>
		<!-- Executa o script de atualização -->
		<exec executable="${mysql_command}" input="${docs.dir}/script-update-test-db.sql" failonerror="true">
			<arg value="--user=${jdbc.username}"/>
			<arg value="--password=${jdbc.password}"/>
			<arg value="${jdbc.test.database}"/>
		</exec>
	</target>
	
	<target name="test" depends="update_db_test">
		<echo>Rodando os testes unitários...</echo>
		
		<junit printsummary="on" fork="on" haltonerror="yes" haltonfailure="no">
			<classpath refid="master-classpath"></classpath>
			<batchtest todir="${build.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="package" depends="test">
		<echo>Gerando o WAR do projeto...</echo>
		
		<!-- Geração do arquivo WAR -->
		<war destfile="ROOT.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
	</target>
	
	<target name="update_db" depends="package">
		<!-- Exclui o backup existente -->
		<delete>
			<fileset dir="${mysql_backup_dir}">
				<include name="orcamento.sql"/>
			</fileset>
		</delete>
		
		<!-- Realiza o backup da base -->
		<echo>Realizando backup da base de dados...</echo>
		<exec executable="${mysq_dump_command}" output="${mysql_backup_dir}/orcamento.sql" failonerror="true">
			<arg value="--add-drop-table"/>
			<arg value="--hex-blob"/>
			<arg value="--host=${jdbc.hostname}"/>
			<arg value="--user=${jdbc.username}"/>
			<arg value="--password=${jdbc.password}"/>
			<arg value="${jdbc.database}"/>
		</exec>		
		
		<!-- Realiza as mudanças na base -->
		<echo>Atualizando a base de dados...</echo>
		<exec executable="${mysql_command}" input="${docs.dir}/script-update-production-db.sql" failonerror="true">
			<arg value="--user=${jdbc.username}"/>
			<arg value="--password=${jdbc.password}"/>
			<arg value="${jdbc.database}"/>
		</exec>
	</target>
	
	<target name="deploy" depends="update_db">
		<echo>Realizando o deploy para o servidor...</echo>
		
		<!-- Exclui o diretório atual do projeto no Tomcat -->
		<delete dir="${tomcat_install}/webapps/ROOT"/>
		
		<!-- Exclui o arquivo .WAR da pasta webapps do Tomcat -->
		<delete>
			<fileset dir="${tomcat_install}/webapps">
				<include name="ROOT.war"/>
			</fileset>
		</delete>
		
		<!-- Copia o arquivo .WAR para a pasta webapps do Tomcat -->
		<copy todir = "${tomcat_install}/webapps">
        	<fileset dir=".">
           		<include name="ROOT.war"/>
         	</fileset>
      	</copy>
		
		<!-- Limpeza da pasta de build -->
		<echo>Limpando a pasta de build...</echo>
		<delete dir="${build.dir}"/>
		
		<!-- Exclui o arquivo .WAR da pasta do projeto -->
		<delete>
			<fileset dir=".">
				<include name="*.war"/>
			</fileset>
		</delete>
	</target>
	
</project>	